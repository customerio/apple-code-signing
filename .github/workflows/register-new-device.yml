# Automation to allow employees in the company to download and install our internal iOS apps. 
# This workflow is designed to be executed automatically by Firebase when a new device is added. 
# But, if needed, you can also run it manually from the GitHub website. 
name: Register new iOS device to Apple Developer account 

on: 
  workflow_dispatch: # manually run the action from GitHub website or from GitHub API
    inputs:
      ios_device_udid:
        description: 'iOS Device UDID'
        required: true
        type: string
      device_model_name:
        description: 'Device model of the iOS device (Example: iPhone 14 Pro)'
        required: true
        type: string
      device_tester_email:
        description: 'Email address for who owns this iOS device'
        required: true
        type: string

jobs:
  register-new-device:
    runs-on: macos-latest
    steps:
    - name: Create secret environment variables from inputs 
      run: |
        IOS_DEVICE_UDID=$(echo "${{ inputs.ios_device_udid }}")
        echo "::add-mask::$IOS_DEVICE_UDID"
        echo IOS_DEVICE_UDID=$IOS_DEVICE_UDID >> $GITHUB_ENV 
         
        DEVICE_TESTER_EMAIL=$(echo "${{ inputs.device_tester_email }}")
        echo "::add-mask::$DEVICE_TESTER_EMAIL"
        echo DEVICE_TESTER_EMAIL=$DEVICE_TESTER_EMAIL >> $GITHUB_ENV 

        DEVICE_MODEL_NAME=$(echo "${{ inputs.device_model_name }}")
        echo "::add-mask::$DEVICE_MODEL_NAME"
        echo DEVICE_MODEL_NAME=$DEVICE_MODEL_NAME >> $GITHUB_ENV 

    - uses: actions/checkout@v3

    - name: Install Fastlane (via ruby and Bundler) used for managing code signing files 
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0' 
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Register new iOS device to company's Apple Developer account 
      # runs function inside of fastlane/Fastfile      
      run: bundle exec fastlane register_new_ios_device ios_device_udid:"${{ env.IOS_DEVICE_UDID }}" device_tester_email:"${{ env.DEVICE_TESTER_EMAIL }}" device_model_name:"${{ env.DEVICE_MODEL_NAME }}"

    # Apple requires that code signing files get re-created after adding a new test device to Developer account in order for new app builds to be installable by this new iOS device. 
    - name: Recrete code signing files to include new test device
      run: bundle exec fastlane create_all_code_signing_files
    
    # Below, we can now trigger other CI server jobs to make new builds of iOS apps so the new tester 
    # is able to download builds right now. 
    # - name: Create new build of Remote Habits for tester to be able to download right now 
    #   uses: benc-uk/workflow-dispatch@v1
    #   with:
    #     workflow: manual-build.yml
    #     repo: customerio/RemoteHabits-iOS
    #     token: ${{ secrets.GH_TOKEN_TRIGGER_WORKFLOW_IOS_REPOSITORY }}
    
    # Optionally: send an email via CIO to the tester :) 
    # - name: Send email to tester saying we have added them to the account 
